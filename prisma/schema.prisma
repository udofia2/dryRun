// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int          @id @default(autoincrement())
  email        String       @unique
  firstname    String
  lastname     String
  password     String
  type         USERTYPE?
  city         String?
  state        String?
  booked_dates DateTime[]
  exhibit      EXHIBITTYPE?
  events       Event[]

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@index([email])
}

enum USERTYPE {
  host
  exhibitor
}

enum EXHIBITTYPE {
  event_venues
  event_planner
  bar_services_and_beverages
  photography
  beauty_professional
  fashion_designers_and_stylists
  decorators
  videographer
  clothing_and_accessories
  event_staffs
  caterer
  baker
  printing_service
  event_rental
  favours_and_gifts
  music_and_entertainment
  lighting_and_av
  dancing_instructor
  health_and_fitness
  accomodation
  transportation_service
  model
  social_media_influencer
}

model Prospect {
  id          String       @id @default(uuid())
  date        DateTime
  client_name String
  source      SOURCETYPE
  status      STATUSTYPE

  client_id String
  client     Client?

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@index([id])
}

model Client {
  id           String     @id @default(uuid())
  email        String
  type         CLIENTTYPE
  name         String
  phone_number String

  prospect_id String   @unique
  prospect    Prospect @relation(fields: [prospect_id], references: [id])

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model Event {
  id          Int      @id @default(autoincrement())
  name        String
  description String
  date        DateTime
  location    String
  city        String
  state       String

  exhibitor_id Int
  exhibitor    User @relation(fields: [exhibitor_id], references: [id])

  specifications Specification[]

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model Specification {
  id String @id @default(uuid())
  theme String
  provisions String[]
  activities String[]

  events Event[]

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}


enum CLIENTTYPE {
  Individual
  Company
  Organization
}

enum STATUSTYPE {
  Pending
  Converted
  Rejected
}

enum PROSPECTTYPE {
  host
  exhibitor
}

enum SOURCETYPE {
  Offline
  Online
}